{"ast":null,"code":"var _jsxFileName = \"/Users/hongxiaowei/Desktop/hello-next/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import Layout from '../components/MyLayout';\n// import Link from 'next/link';\n// import fetch from 'isomorphic-unfetch'\n// const Index = props => (\n//     <Layout>\n//         <h1>Batman TV Shows</h1>\n//         <ul>\n//             {props.shows.map(show => (\n//                 <li key={show.id}>\n//                     <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//                         <a>{show.name}</a>\n//                     </Link>\n//                 </li>\n//             ))}\n//         </ul>\n//         <style jsx>{`\n//             h1,a{\n//                 color:#333;\n//             }\n//             ul{\n//                 padding: 0;\n//             }\n//             li{\n//                 list-style:none;\n//                 margin: 5px 0;\n//             }\n//             a:hover {\n//                 opacity: 0.6;\n//             }\n//         `}</style>\n//     </Layout>\n// );\n// Index.getInitialProps = async function () {\n//     const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//     const data = await res.json();\n//     console.log(`Show data fetched. Count: ${data.length}`);\n//     return {\n//         shows: data.map(entry => entry.show)\n//     };\n// };\n// export default Index\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const {\n    data,\n    error\n  } = useSWR('/api/randomQuote', fetcher); // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.author`\n\n  const author = data === null || data === void 0 ? void 0 : data.author;\n  let quote = data === null || data === void 0 ? void 0 : data.quote;\n  if (!data) quote = 'Loading...';\n  if (error) quote = 'Failed to fetch the quote.';\n  return __jsx(\"main\", {\n    className: \"jsx-1236022937\" + \" \" + \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-1236022937\" + \" \" + \"quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, quote), author && __jsx(\"span\", {\n    className: \"jsx-1236022937\" + \" \" + \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 24\n    }\n  }, \"- \", author), __jsx(_JSXStyle, {\n    id: \"1236022937\",\n    __self: this\n  }, \"main.jsx-1236022937{width:90%;max-width:900px;margin:300px auto;text-align:center;}.quote.jsx-1236022937{font-family:cursive;color:#e243de;font-size:24px;padding-bottom:10px;}.author.jsx-1236022937{font-family:sans-serif;color:#559834;font-size:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ob25neGlhb3dlaS9EZXNrdG9wL2hlbGxvLW5leHQvcGFnZXMvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUV3QixBQUdxQixBQU1VLEFBTUcsVUFYUCxVQU1GLEdBTUEsR0FYSSxRQU1ILEdBTUEsT0FYRyxLQU1FLEdBTXRCLFVBWEEsT0FNQSIsImZpbGUiOiIvVXNlcnMvaG9uZ3hpYW93ZWkvRGVza3RvcC9oZWxsby1uZXh0L3BhZ2VzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL015TGF5b3V0Jztcbi8vIGltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG4vLyBpbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJ1xuXG4vLyBjb25zdCBJbmRleCA9IHByb3BzID0+IChcbi8vICAgICA8TGF5b3V0PlxuLy8gICAgICAgICA8aDE+QmF0bWFuIFRWIFNob3dzPC9oMT5cbi8vICAgICAgICAgPHVsPlxuLy8gICAgICAgICAgICAge3Byb3BzLnNob3dzLm1hcChzaG93ID0+IChcbi8vICAgICAgICAgICAgICAgICA8bGkga2V5PXtzaG93LmlkfT5cbi8vICAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9wL1tpZF1cIiBhcz17YC9wLyR7c2hvdy5pZH1gfT5cbi8vICAgICAgICAgICAgICAgICAgICAgICAgIDxhPntzaG93Lm5hbWV9PC9hPlxuLy8gICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4vLyAgICAgICAgICAgICAgICAgPC9saT5cbi8vICAgICAgICAgICAgICkpfVxuLy8gICAgICAgICA8L3VsPlxuLy8gICAgICAgICA8c3R5bGUganN4PntgXG4vLyAgICAgICAgICAgICBoMSxhe1xuLy8gICAgICAgICAgICAgICAgIGNvbG9yOiMzMzM7XG4vLyAgICAgICAgICAgICB9XG4vLyAgICAgICAgICAgICB1bHtcbi8vICAgICAgICAgICAgICAgICBwYWRkaW5nOiAwO1xuLy8gICAgICAgICAgICAgfVxuLy8gICAgICAgICAgICAgbGl7XG4vLyAgICAgICAgICAgICAgICAgbGlzdC1zdHlsZTpub25lO1xuLy8gICAgICAgICAgICAgICAgIG1hcmdpbjogNXB4IDA7XG4vLyAgICAgICAgICAgICB9XG4vLyAgICAgICAgICAgICBhOmhvdmVyIHtcbi8vICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjY7XG4vLyAgICAgICAgICAgICB9XG4vLyAgICAgICAgIGB9PC9zdHlsZT5cbi8vICAgICA8L0xheW91dD5cbi8vICk7XG5cbi8vIEluZGV4LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uICgpIHtcbi8vICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9hcGkudHZtYXplLmNvbS9zZWFyY2gvc2hvd3M/cT1iYXRtYW4nKTtcbi8vICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcblxuLy8gICAgIGNvbnNvbGUubG9nKGBTaG93IGRhdGEgZmV0Y2hlZC4gQ291bnQ6ICR7ZGF0YS5sZW5ndGh9YCk7XG5cbi8vICAgICByZXR1cm4ge1xuLy8gICAgICAgICBzaG93czogZGF0YS5tYXAoZW50cnkgPT4gZW50cnkuc2hvdylcbi8vICAgICB9O1xuLy8gfTtcblxuLy8gZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuXG5pbXBvcnQgdXNlU1dSIGZyb20gJ3N3cic7XG5cbmZ1bmN0aW9uIGZldGNoZXIodXJsKSB7XG4gICAgcmV0dXJuIGZldGNoKHVybCkudGhlbihyID0+IHIuanNvbigpKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW5kZXgoKSB7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gdXNlU1dSKCcvYXBpL3JhbmRvbVF1b3RlJywgZmV0Y2hlcik7XG4gICAgLy8gVGhlIGZvbGxvd2luZyBsaW5lIGhhcyBvcHRpb25hbCBjaGFpbmluZywgYWRkZWQgaW4gTmV4dC5qcyB2OS4xLjUsXG4gICAgLy8gaXMgdGhlIHNhbWUgYXMgYGRhdGEgJiYgZGF0YS5hdXRob3JgXG4gICAgY29uc3QgYXV0aG9yID0gZGF0YT8uYXV0aG9yO1xuICAgIGxldCBxdW90ZSA9IGRhdGE/LnF1b3RlO1xuXG4gICAgaWYgKCFkYXRhKSBxdW90ZSA9ICdMb2FkaW5nLi4uJztcbiAgICBpZiAoZXJyb3IpIHF1b3RlID0gJ0ZhaWxlZCB0byBmZXRjaCB0aGUgcXVvdGUuJztcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxtYWluIGNsYXNzTmFtZT1cImNlbnRlclwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJxdW90ZVwiPntxdW90ZX08L2Rpdj5cbiAgICAgICAgICAgIHthdXRob3IgJiYgPHNwYW4gY2xhc3NOYW1lPVwiYXV0aG9yXCI+LSB7YXV0aG9yfTwvc3Bhbj59XG5cbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgbWFpbiB7XG4gICAgICAgICAgd2lkdGg6IDkwJTtcbiAgICAgICAgICBtYXgtd2lkdGg6IDkwMHB4O1xuICAgICAgICAgIG1hcmdpbjogMzAwcHggYXV0bztcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIH1cbiAgICAgICAgLnF1b3RlIHtcbiAgICAgICAgICBmb250LWZhbWlseTogY3Vyc2l2ZTtcbiAgICAgICAgICBjb2xvcjogI2UyNDNkZTtcbiAgICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgICAgcGFkZGluZy1ib3R0b206IDEwcHg7XG4gICAgICAgIH1cbiAgICAgICAgLmF1dGhvciB7XG4gICAgICAgICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gICAgICAgICAgY29sb3I6ICM1NTk4MzQ7XG4gICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgICAgIDwvbWFpbj5cbiAgICApO1xufSJdfQ== */\\n/*@ sourceURL=/Users/hongxiaowei/Desktop/hello-next/pages/index.js */\"));\n}","map":{"version":3,"sources":["/Users/hongxiaowei/Desktop/hello-next/pages/index.js"],"names":["useSWR","fetcher","url","fetch","then","r","json","Index","data","error","author","quote"],"mappings":";;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,MAAP,MAAmB,KAAnB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAAP;AACH;;AAED,eAAe,SAASC,KAAT,GAAiB;AAC5B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBT,MAAM,CAAC,kBAAD,EAAqBC,OAArB,CAA9B,CAD4B,CAE5B;AACA;;AACA,QAAMS,MAAM,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,MAArB;AACA,MAAIC,KAAK,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,KAAlB;AAEA,MAAI,CAACH,IAAL,EAAWG,KAAK,GAAG,YAAR;AACX,MAAIF,KAAJ,EAAWE,KAAK,GAAG,4BAAR;AAEX,SACI;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,wCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CADJ,EAEKD,MAAM,IAAI;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BA,MAA5B,CAFf;AAAA;AAAA;AAAA,o5HADJ;AA0BH","sourcesContent":["// import Layout from '../components/MyLayout';\n// import Link from 'next/link';\n// import fetch from 'isomorphic-unfetch'\n\n// const Index = props => (\n//     <Layout>\n//         <h1>Batman TV Shows</h1>\n//         <ul>\n//             {props.shows.map(show => (\n//                 <li key={show.id}>\n//                     <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//                         <a>{show.name}</a>\n//                     </Link>\n//                 </li>\n//             ))}\n//         </ul>\n//         <style jsx>{`\n//             h1,a{\n//                 color:#333;\n//             }\n//             ul{\n//                 padding: 0;\n//             }\n//             li{\n//                 list-style:none;\n//                 margin: 5px 0;\n//             }\n//             a:hover {\n//                 opacity: 0.6;\n//             }\n//         `}</style>\n//     </Layout>\n// );\n\n// Index.getInitialProps = async function () {\n//     const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//     const data = await res.json();\n\n//     console.log(`Show data fetched. Count: ${data.length}`);\n\n//     return {\n//         shows: data.map(entry => entry.show)\n//     };\n// };\n\n// export default Index\n\n\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n    return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n    const { data, error } = useSWR('/api/randomQuote', fetcher);\n    // The following line has optional chaining, added in Next.js v9.1.5,\n    // is the same as `data && data.author`\n    const author = data?.author;\n    let quote = data?.quote;\n\n    if (!data) quote = 'Loading...';\n    if (error) quote = 'Failed to fetch the quote.';\n\n    return (\n        <main className=\"center\">\n            <div className=\"quote\">{quote}</div>\n            {author && <span className=\"author\">- {author}</span>}\n\n            <style jsx>{`\n        main {\n          width: 90%;\n          max-width: 900px;\n          margin: 300px auto;\n          text-align: center;\n        }\n        .quote {\n          font-family: cursive;\n          color: #e243de;\n          font-size: 24px;\n          padding-bottom: 10px;\n        }\n        .author {\n          font-family: sans-serif;\n          color: #559834;\n          font-size: 20px;\n        }\n      `}</style>\n        </main>\n    );\n}"]},"metadata":{},"sourceType":"module"}